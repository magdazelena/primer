name: CI

on:
  push:
    branches:
      - "**"

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clear Nx cache
        run: rm -rf .nx/

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
            apps/frontend/node_modules
            apps/backend/node_modules
            .nx/
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}



  linting:
    name: Validate linting
    runs-on: ubuntu-latest
    needs: install
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
            apps/frontend/node_modules
            apps/backend/node_modules
            .nx/
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Check linting
        uses: ./.github/actions/validate-linting
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} 

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
            apps/frontend/node_modules
            apps/backend/node_modules
            .nx/
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run unit tests
        uses: ./.github/actions/validate-unit-testing
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  e2e-tests:
    name: Run e2e tests
    runs-on: ubuntu-latest
    needs: [install, unit-tests]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Restore node modules cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
            apps/frontend/node_modules
            apps/backend/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run e2e tests
        uses: ./.github/actions/validate-e2e
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  dependabot:
    name: Dependabot
    runs-on: ubuntu-latest
    needs: [linting, unit-tests, e2e-tests, install]
    if: ${{ github.actor == 'dependabot[bot]' }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Run action
        uses: ./.github/actions/dependabot-automerge
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pr-url: ${{ github.event.pull_request.html_url }}


